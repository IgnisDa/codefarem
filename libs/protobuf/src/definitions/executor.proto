syntax = "proto3";

package executor;

// A message type which can be used if no parameters are needed
message VoidParams {
}

enum Language {
  Rust = 0;
  Go = 1;
  Cpp = 2;
  C = 3;
  Zig = 4;
  Python = 5;
  Swift = 6;
  Ruby = 7;
  Grain = 8;
}

// The input required when executing a wasm source.
message ExecutorInput {
  bytes data = 1;
  repeated string arguments = 2;
  Language language = 3;
}

// The output of executing a wasm source.
message ExecutorOutput {
  bytes data = 1;
  // The time elapsed to execute the wasm
  string elapsed = 2;
}

// The response returned when getting information about the compiler toolchain
message ToolchainInfoResponse {
  // The version of the compiler toolchain
  string version = 1;
}

// The service definition.
service ExecutorService {
  // Execute the wasm source and get the output generated
  rpc Execute(ExecutorInput) returns (ExecutorOutput) {};
  // Get information about the compiler toolchain
  rpc ToolchainInfo(VoidParams) returns (ToolchainInfoResponse);
}
